#!/usr/bin/env node --harmony

'use strict'
const co = require('co')
const program = require('commander')
const inquirer = require('inquirer')
const config = require('../templates')
const chalk = require('chalk')
const fs = require('fs')
const ora = require('ora')
const prompts = require('../tools/prompts')
const logger = require('../tools/logger')
const download = require('../tools/download')

console.log()
process.on('exit', ()=>{
  console.log()
})

/**
 * Usage.
 */

program
.usage('<template-name> [project-name]')
.option('-c, --clone', 'use git clone')
.option('--offline', 'use cached template')

/**
* Help.
*/

program.on('--help', function () {
console.log('  Examples:')
console.log()
console.log(chalk.gray('    # create a new project with an official template'))
console.log('    $ vue init webpack my-project')
console.log()
console.log(chalk.gray('    # create a new project straight from a github template'))
console.log('    $ vue init username/repo my-project')
console.log()
})

const init= () => {
  let parm = program.args
  console.log("=========>parm")
  console.log(parm)
  inquirer.prompt(prompts.getOfficialPrompts()).then((answers)=> {
    download.getTemplate(answers.template,answers.projectName,false);
    //logger.error(answers);
    // let tplName = "yield prompt('Template name: ')"
    // let gitUrl = "yield prompt('Git https link: ')"
    // let branch = "yield prompt('Branch: ')"
    
    // // 避免重复添加
    // if (!config.tpl[tplName]) {
    //   config.tpl[tplName] = {}
    //   config.tpl[tplName]['url'] = gitUrl.replace(/[\u0000-\u0019]/g, '') // 过滤unicode字符
    //   config.tpl[tplName]['branch'] = branch
    // } else {
    //   console.log(chalk.red('Template has already existed!'))
    //   process.exit()
    // }
    
    // // 把模板信息写入templates.json
    // fs.writeFile(__dirname + '/../templates.json', JSON.stringify(config), 'utf-8', (err) => {
    //   if (err) console.log(err)
    //   console.log(chalk.green('New template added!\n'))
    //   console.log(chalk.grey('The last template list is: \n'))
    //   console.log(config)
    //   console.log('\n')
    //   process.exit()
    // })
  })
}
module.exports = init();